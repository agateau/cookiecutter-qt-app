#!/bin/bash
set -euo pipefail

pushd $PWD > /dev/null
cd $(dirname $0)
CI_DIR=$PWD
popd > /dev/null

QT_ARCH_WINDOWS=win64_msvc2017_64
QT_ARCH_MACOS=clang_64
QT_VERSION=5.12.8

ECM_VERSION=5.69.0

. $CI_DIR/common.sh

add_env_var() {
    echo "export $1=$2" >> $ENV_FILE
    export $1=$2
}

prepend_path() {
    echo "export PATH=$1:\$PATH" >> $ENV_FILE
    export PATH=$1:$PATH
}

install_qt() {
    echo_title "Installing Qt"
    local qt_install_dir=$INST_DIR/qt
    local aqt_args
    if is_windows ; then
        aqt_args="windows desktop $QT_ARCH_WINDOWS"
    fi
    if is_macos ; then
        aqt_args="mac desktop"
    fi
    $PYTHON_CMD -m pip install aqtinstall
    $PYTHON_CMD -m aqt install --outputdir $qt_install_dir $QT_VERSION $aqt_args
    if is_windows ; then
        # Add Qt bin dir to $PATH so that tests can find Qt dlls
        prepend_path $(find $qt_install_dir -type d -a -name bin)
    fi
    # Add Qt plugins dir to $QT_PLUGIN_PATH because the official Qt installer
    # patches QtCore dll so that it finds its plugins, but aqt does not.
    # Not being able to find plugins causes tests to not run on macOS and
    # Windows because they can't find the matching platform plugin.
    add_env_var QT_PLUGIN_PATH $(find $qt_install_dir -type d -a -name plugins)
    add_env_var Qt5_DIR $(find $qt_install_dir -path '*/lib/cmake')
}

install_linux_packages() {
    echo_title "Installing Linux packages"
    sudo apt-get install -y --no-install-recommends \
        cmake \
        extra-cmake-modules \
        qtbase5-dev \
        qttools5-dev \
        xvfb
}

install_ecm() {
    echo_title "Installing ECM"
    git clone --depth 1 https://anongit.kde.org/extra-cmake-modules.git -b v$ECM_VERSION
    (
        cd extra-cmake-modules
        mkdir build
        cd build
        cmake \
            -DCMAKE_INSTALL_PREFIX=$INST_DIR \
            -DBUILD_HTML_DOCS=OFF \
            -DBUILD_MAN_DOCS=OFF \
            -DBUILD_QTHELP_DOCS=OFF \
            -DBUILD_TESTING=OFF \
            ..
        cmake --build .
        cmake --build . --target install
    )
}

install_macos_packages() {
    install_qt
    install_ecm
}

install_windows_packages() {
    install_qt
    install_ecm
}

INST_DIR=$1
mkdir -p $INST_DIR

# Make INST_DIR absolute
pushd $PWD > /dev/null
cd $INST_DIR
INST_DIR=$PWD
popd

ENV_FILE=$INST_DIR/env.sh

rm -f $ENV_FILE
touch $ENV_FILE
if is_windows ; then
    INST_DIR=$(cygpath $INST_DIR)
    ENV_FILE=$(cygpath $ENV_FILE)
fi

add_env_var CMAKE_INSTALL_PREFIX $INST_DIR
add_env_var CMAKE_PREFIX_PATH $INST_DIR

case "$OS" in
linux)
    install_linux_packages
    ;;
macos)
    install_macos_packages
    ;;
windows)
    install_windows_packages
    ;;
esac
